[{"__symbolic":"module","version":3,"metadata":{"EncounterViewerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"encounter-viewer","template":"\n      <div class=\"viewer\">\n\n\n        <div *ngIf=\"rootNode.question.renderingType === 'form'\" class=\"form\">\n          <div *ngFor=\"let question of rootNode.question.questions; let i = index;\">\n            <div *ngIf=\"questionsAnswered(rootNode.children[question.key])\">\n              <div [attr.id]=\"'page'+i\" class=\"panel panel-default\">\n                <p class=\"page-label panel-heading text-primary\">{{question.label}}</p>\n                <div class=\"panel-body\">\n                  <encounter-viewer [node]=\"rootNode.children[question.key]\" [schema]=\"_schema\" [parentComponent]=\"this\" [parentGroup]=\"rootNode.control\"></encounter-viewer>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div *ngIf=\"rootNode.question.renderingType === 'page'\" class=\"page\">\n          <encounter-viewer *ngFor=\"let question of rootNode.question.questions\" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\"\n            [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\n        </div>\n\n\n        <div *ngIf=\"rootNode.question.renderingType === 'section'&& questionsAnswered(rootNode)\"\n          class=\"section\">\n          <div class=\"panel panel-primary\">\n            <p class=\"panel-heading section-label\">{{ rootNode.question.label }}</p>\n          </div>\n          <div *ngFor=\"let question of rootNode.question.questions\">\n            <encounter-viewer [node]=\"rootNode.children[question.key]\" [parentComponent]=\"this\" [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\n          </div>\n        </div>\n\n        <!--Leaf Controls-->\n        <div style=\"margin-left:10px;\">\n        <form *ngIf=\"rootNode.question.controlType === 0\" [formGroup]=\"parentGroup\">\n          <div *ngIf=\"rootNode.control.value\">\n          <div class=\"question-answer\">\n            <label *ngIf=\"rootNode.question.label\" [attr.for]=\"rootNode.question.key\" style=\"font-weight:400;\">\n                {{ rootNode.question.label }}\n            </label>\n            <span *ngIf=\"checkForColon(rootNode.question.label)\">:</span>\n            <div [ngSwitch]=\"rootNode.question.renderingType\" style=\"display:inline-block; font-weight:bold;\">\n                <div *ngSwitchCase=\" 'file' \">\n                  <file-preview [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"fileDataSource\"></file-preview>\n                </div>\n                <div *ngSwitchCase=\"'remote-select'\">\n                  <remote-answer [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"remoteDataSource\"></remote-answer>\n                </div>\n                <div *ngSwitchDefault style=\"display:inline-block\">\n                    <question-control [schema]=\"_schema\" [value]=\"rootNode.control.value\" [dataSource]=\"customDataSource\"></question-control>\n                  </div>\n            </div>\n     \n          </div>\n          </div>\n        </form>\n      </div>\n\n        <!--Array Controls-->\n        <div *ngIf=\"rootNode.question.controlType === 1 && questionsAnswered(rootNode)\">\n          <div [ngSwitch]=\"rootNode.question.renderingType\">\n            <div *ngSwitchCase=\" 'repeating' \">\n              <div [ngSwitch]=\"rootNode.question.extras.type\">\n                <div *ngSwitchCase=\"'testOrder'\">\n                  <label>{{rootNode.question.label}}:</label>\n                  <div *ngFor=\"let child of rootNode.children; let i=index \">\n                    <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n                      \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\n                  </div>\n                </div>\n          \n                <div *ngSwitchCase=\"'obsGroup'\">\n                  <div *ngFor=\"let child of rootNode.children; let i=index \">\n                    <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n                      \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div *ngIf=\"rootNode.question.controlType === 2\">\n\n          <!--GROUP-->\n          <div [ngSwitch]=\"rootNode.question.renderingType \">\n            <div *ngSwitchCase=\" 'group' \">\n              <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\n                        \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\n            </div>\n            <div *ngSwitchCase=\" 'field-set' \">\n              <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\n                        \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\n            </div>\n          </div>\n        </div>\n\n\n\n        </div>\n    ","styles":["\n      .page-label{font-size:20px;font-weight:bold}.section-label{font-size:18px;font-weight:500}.panel-primary{border:none !important}.question-answer{font-size:16px}.panel{margin-bottom:5px}div.section{margin-bottom:15px !important}.line-breaker{white-space:pre-line}hr{margin:10px}\n    "]}]}],"members":{"parentGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"parentComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"node":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"schema":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"encounter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"form":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject"},"arguments":[{"__symbolic":"reference","module":"../../index","name":"DataSources"}]}]],"parameters":[{"__symbolic":"reference","module":"../encounter-viewer.service","name":"EncounterViewerService"},{"__symbolic":"reference","module":"../../index","name":"DataSources"}]}],"ngOnInit":[{"__symbolic":"method"}],"questionsAnswered":[{"__symbolic":"method"}],"questionAnswered":[{"__symbolic":"method"}],"checkForColon":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"EncounterViewerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"encounter-viewer","template":"\n      <div class=\"viewer\">\n\n\n        <div *ngIf=\"rootNode.question.renderingType === 'form'\" class=\"form\">\n          <div *ngFor=\"let question of rootNode.question.questions; let i = index;\">\n            <div *ngIf=\"questionsAnswered(rootNode.children[question.key])\">\n              <div [attr.id]=\"'page'+i\" class=\"panel panel-default\">\n                <p class=\"page-label panel-heading text-primary\">{{question.label}}</p>\n                <div class=\"panel-body\">\n                  <encounter-viewer [node]=\"rootNode.children[question.key]\" [schema]=\"_schema\" [parentComponent]=\"this\" [parentGroup]=\"rootNode.control\"></encounter-viewer>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div *ngIf=\"rootNode.question.renderingType === 'page'\" class=\"page\">\n          <encounter-viewer *ngFor=\"let question of rootNode.question.questions\" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\"\n            [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\n        </div>\n\n\n        <div *ngIf=\"rootNode.question.renderingType === 'section'&& questionsAnswered(rootNode)\"\n          class=\"section\">\n          <div class=\"panel panel-primary\">\n            <p class=\"panel-heading section-label\">{{ rootNode.question.label }}</p>\n          </div>\n          <div *ngFor=\"let question of rootNode.question.questions\">\n            <encounter-viewer [node]=\"rootNode.children[question.key]\" [parentComponent]=\"this\" [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\n          </div>\n        </div>\n\n        <!--Leaf Controls-->\n        <div style=\"margin-left:10px;\">\n        <form *ngIf=\"rootNode.question.controlType === 0\" [formGroup]=\"parentGroup\">\n          <div *ngIf=\"rootNode.control.value\">\n          <div class=\"question-answer\">\n            <label *ngIf=\"rootNode.question.label\" [attr.for]=\"rootNode.question.key\" style=\"font-weight:400;\">\n                {{ rootNode.question.label }}\n            </label>\n            <span *ngIf=\"checkForColon(rootNode.question.label)\">:</span>\n            <div [ngSwitch]=\"rootNode.question.renderingType\" style=\"display:inline-block; font-weight:bold;\">\n                <div *ngSwitchCase=\" 'file' \">\n                  <file-preview [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"fileDataSource\"></file-preview>\n                </div>\n                <div *ngSwitchCase=\"'remote-select'\">\n                  <remote-answer [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"remoteDataSource\"></remote-answer>\n                </div>\n                <div *ngSwitchDefault style=\"display:inline-block\">\n                    <question-control [schema]=\"_schema\" [value]=\"rootNode.control.value\" [dataSource]=\"customDataSource\"></question-control>\n                  </div>\n            </div>\n     \n          </div>\n          </div>\n        </form>\n      </div>\n\n        <!--Array Controls-->\n        <div *ngIf=\"rootNode.question.controlType === 1 && questionsAnswered(rootNode)\">\n          <div [ngSwitch]=\"rootNode.question.renderingType\">\n            <div *ngSwitchCase=\" 'repeating' \">\n              <div [ngSwitch]=\"rootNode.question.extras.type\">\n                <div *ngSwitchCase=\"'testOrder'\">\n                  <label>{{rootNode.question.label}}:</label>\n                  <div *ngFor=\"let child of rootNode.children; let i=index \">\n                    <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n                      \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\n                  </div>\n                </div>\n          \n                <div *ngSwitchCase=\"'obsGroup'\">\n                  <div *ngFor=\"let child of rootNode.children; let i=index \">\n                    <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n                      \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div *ngIf=\"rootNode.question.controlType === 2\">\n\n          <!--GROUP-->\n          <div [ngSwitch]=\"rootNode.question.renderingType \">\n            <div *ngSwitchCase=\" 'group' \">\n              <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\n                        \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\n            </div>\n            <div *ngSwitchCase=\" 'field-set' \">\n              <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\n                        \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\n            </div>\n          </div>\n        </div>\n\n\n\n        </div>\n    ","styles":["\n      .page-label{font-size:20px;font-weight:bold}.section-label{font-size:18px;font-weight:500}.panel-primary{border:none !important}.question-answer{font-size:16px}.panel{margin-bottom:5px}div.section{margin-bottom:15px !important}.line-breaker{white-space:pre-line}hr{margin:10px}\n    "]}]}],"members":{"parentGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"parentComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"node":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"schema":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"encounter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"form":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject"},"arguments":[{"__symbolic":"reference","module":"../../index","name":"DataSources"}]}]],"parameters":[{"__symbolic":"reference","module":"../encounter-viewer.service","name":"EncounterViewerService"},{"__symbolic":"reference","module":"../../index","name":"DataSources"}]}],"ngOnInit":[{"__symbolic":"method"}],"questionsAnswered":[{"__symbolic":"method"}],"questionAnswered":[{"__symbolic":"method"}],"checkForColon":[{"__symbolic":"method"}]}}}}]