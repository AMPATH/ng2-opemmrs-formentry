[{"__symbolic":"module","version":3,"metadata":{"EncounterViewerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"encounter-viewer","template":"\n      <div class=\"viewer\">\n      <div id=\"page0\" *ngIf=\"enc\">\n      <encounter-details [encounter]=\"enc\"></encounter-details>\n      </div>\n\n      <div *ngIf=\"rootNode.question.renderingType === 'form'\" class=\"form\">\n        <div *ngFor=\"let question of rootNode.question.questions; let i = index;\">\n          <div *ngIf=\"questionsAnswered(rootNode.children[question.key]) && !isEncounterDetails(rootNode.children[question.key])\">\n            <div [attr.id]=\"'page'+i\" class=\"panel panel-default\">\n              <p class=\"page-label panel-heading text-primary\">{{question.label}}</p>\n              <div class=\"panel-body\">\n                <encounter-viewer [node]=\"rootNode.children[question.key]\" [schema]=\"schema\" [parentComponent]=\"this\"></encounter-viewer>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n        <div *ngIf=\"rootNode.question.renderingType === 'page'\" class=\"page\">\n          <encounter-viewer *ngFor=\"let question of rootNode.question.questions\" [parentComponent]=\"this\"\n          [node]=\"rootNode.children[question.key]\" [schema]=\"schema\"></encounter-viewer>\n        </div>\n\n\n        <div *ngIf=\"rootNode.question.renderingType === 'section'&& questionsAnswered(rootNode) && !isEncounterDetails(rootNode)\" class=\"section\">\n          <div class=\"panel panel-primary\">   \n          <p class=\"panel-heading section-label\">{{ rootNode.question.label }}</p>\n          </div>\n          <div *ngFor=\"let question of rootNode.question.questions\">\n            <encounter-viewer [node]=\"rootNode.children[question.key]\" [parentComponent]=\"this\"\n            [schema]=\"schema\"></encounter-viewer>\n          </div>\n        </div>\n\n\n        <div *ngIf=\"questionAnswered(rootNode)\">\n          <div class=\"question-answer\">\n            {{ rootNode.question.label }}\n            <span *ngIf=\"checkForColon(rootNode.question.label)\">:</span>\n            <span class=\"line-breaker\">{{rootNode.initialValue}}</span>\n          </div>\n          <hr>\n        </div>\n      </div>\n    ","styles":["\n      .page-label{font-size:20px;font-weight:bold}.section-label{font-size:18px;font-weight:500}.panel-primary{border:none !important}.question-answer{font-weight:700;font-size:14px}.panel{margin-bottom:5px}div.section{margin-bottom:15px !important}.line-breaker{white-space:pre-line}hr{margin:10px}\n    "]}]}],"members":{"parentComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"node":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"schema":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"encounter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"form":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"../encounter-viewer.service","name":"EncounterViewerService"}]}],"ngOnInit":[{"__symbolic":"method"}],"questionsAnswered":[{"__symbolic":"method"}],"questionAnswered":[{"__symbolic":"method"}],"checkForColon":[{"__symbolic":"method"}],"isEncounterDetails":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"EncounterViewerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"encounter-viewer","template":"\n      <div class=\"viewer\">\n      <div id=\"page0\" *ngIf=\"enc\">\n      <encounter-details [encounter]=\"enc\"></encounter-details>\n      </div>\n\n      <div *ngIf=\"rootNode.question.renderingType === 'form'\" class=\"form\">\n        <div *ngFor=\"let question of rootNode.question.questions; let i = index;\">\n          <div *ngIf=\"questionsAnswered(rootNode.children[question.key]) && !isEncounterDetails(rootNode.children[question.key])\">\n            <div [attr.id]=\"'page'+i\" class=\"panel panel-default\">\n              <p class=\"page-label panel-heading text-primary\">{{question.label}}</p>\n              <div class=\"panel-body\">\n                <encounter-viewer [node]=\"rootNode.children[question.key]\" [schema]=\"schema\" [parentComponent]=\"this\"></encounter-viewer>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n        <div *ngIf=\"rootNode.question.renderingType === 'page'\" class=\"page\">\n          <encounter-viewer *ngFor=\"let question of rootNode.question.questions\" [parentComponent]=\"this\"\n          [node]=\"rootNode.children[question.key]\" [schema]=\"schema\"></encounter-viewer>\n        </div>\n\n\n        <div *ngIf=\"rootNode.question.renderingType === 'section'&& questionsAnswered(rootNode) && !isEncounterDetails(rootNode)\" class=\"section\">\n          <div class=\"panel panel-primary\">   \n          <p class=\"panel-heading section-label\">{{ rootNode.question.label }}</p>\n          </div>\n          <div *ngFor=\"let question of rootNode.question.questions\">\n            <encounter-viewer [node]=\"rootNode.children[question.key]\" [parentComponent]=\"this\"\n            [schema]=\"schema\"></encounter-viewer>\n          </div>\n        </div>\n\n\n        <div *ngIf=\"questionAnswered(rootNode)\">\n          <div class=\"question-answer\">\n            {{ rootNode.question.label }}\n            <span *ngIf=\"checkForColon(rootNode.question.label)\">:</span>\n            <span class=\"line-breaker\">{{rootNode.initialValue}}</span>\n          </div>\n          <hr>\n        </div>\n      </div>\n    ","styles":["\n      .page-label{font-size:20px;font-weight:bold}.section-label{font-size:18px;font-weight:500}.panel-primary{border:none !important}.question-answer{font-weight:700;font-size:14px}.panel{margin-bottom:5px}div.section{margin-bottom:15px !important}.line-breaker{white-space:pre-line}hr{margin:10px}\n    "]}]}],"members":{"parentComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"node":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"schema":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"encounter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"form":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"../encounter-viewer.service","name":"EncounterViewerService"}]}],"ngOnInit":[{"__symbolic":"method"}],"questionsAnswered":[{"__symbolic":"method"}],"questionAnswered":[{"__symbolic":"method"}],"checkForColon":[{"__symbolic":"method"}],"isEncounterDetails":[{"__symbolic":"method"}]}}}}]